pipeline {
    agent any
    
    environment {
    imagename = "muzafferjoya/spring-boot-poc"
    registryCredential = 'muzaffar-hub-id'
    dockerImage = ''
  }
    
    stages {
        
        stage('Clean Workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Cloning Git') {
          steps {
            git([url: 'https://github.com/muzafferjoya/spring-boot-docker-poc.git', branch: 'master'])

      }
    }
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build imagename
        }
      }
    }
    // stage('Docker Image Scan') {
    //         steps {
    //             script{
    //                 //sh 'trivy image --format template --template "@/usr/bin/html.tpl" -o sp-report.html sp-app:latest'
    //                 sh ' trivy image --format template --template "@/usr/local/share/trivy/templates/html.tpl" -o sp-report.html ${imagename}:latest'
    //             }
    //         }
    //     }
    stage('Push Image') {
      steps{
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push("$BUILD_NUMBER")
             dockerImage.push('latest')

          }
        }
      }
    }
stage('Update Deployment File') {
    environment {
        GIT_REPO_NAME = "sp-manifest"
        GIT_USER_NAME = "muzafferjoya"
    }
    steps {
        withCredentials([gitUsernamePassword(credentialsId: 'github-cred', gitToolName: 'Default')]) {
            sh '''
                git clone https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git
                cd ${GIT_REPO_NAME}
                
                # List files to ensure deployment.yaml exists
                echo "Files in sp-manifest directory:"
                ls -al

                git config user.email "muzafferjoya@gmail.com"
                git config user.name "muzafferjoya"

                # Debug: Show current content of deployment.yaml
                echo "Content of deployment.yaml before update:"
                cat deployment.yaml

                BUILD_NUMBER=${BUILD_NUMBER}
                # Replace any existing tag with the new build number
                sed -i "s|muzafferjoya/spring-boot-poc:[^ ]*|muzafferjoya/spring-boot-poc:${BUILD_NUMBER}|g" deployment.yaml

                # Debug: Show updated content of deployment.yaml
                echo "Content of deployment.yaml after update:"
                cat deployment.yaml

                git add deployment.yaml
                git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                git push origin HEAD:main
            '''
        }
    }
}



  }
    // post {
    //     failure {
    //         emailext attachLog: true, attachmentsPattern: 'sp-report.html', body: '''${SCRIPT, template="groovy-html.template"}''', 
    //                 subject: "${env.JOB_NAME} - Build # ${env.BUILD_NUMBER} - Failed", 
    //                 mimeType: 'text/html',to: "muzafferjoya@gmail.com"
    //         }
    //      success {
    //          archiveArtifacts artifacts: 'sp-report.html', onlyIfSuccessful: true
    //           emailext attachLog: true, attachmentsPattern: 'sp-report.html', body: '''${SCRIPT, template="groovy-html.template"}''', 
    //                 subject: "${env.JOB_NAME} - Build # ${env.BUILD_NUMBER} - Successful", 
    //                 mimeType: 'text/html',to: "muzafferjoya@gmail.com"
    //       }      
    // }
}
